// 2. 배열 생성으로 루프 제거하기
// 보통 단순히 범위 루프를 돌고 싶다면 다음과 같이 코드를 작성합니다.

let sum = 0;
for(let i=5; i<10; i++){
    sum += i;
}
console.log(sum);

// 만약 범위 루프를 함수형 프로그래밍 방식으로 사용하고 싶다면 배열을 생성해서 사용할 수 있습니다.
const sum_2 = Array
    .from(new Array(5), (_,k) => k+5)   // [5,6,7,8,9]
    .reduce((acc,cur) => acc+cur,0);    // 0+5+6+7+8+9 한 값인 35가 나온다.
    console.log(sum_2);


    // 맵핑 함수의 첫 번째 인자 언더스코어(_)는 특별한 인자가 아니라,
    // 불필요한 인자의 공간을 채우기 위한 용도이다.
    // map() 메서드는 배열의 각 요소에 대해 제공된 함수를 순서대로 한 번씩 호출한다.
    // (_,k) => k+5 (문자,숫자) 인거 같음(?)

    // .reduce()는 누산기가 포함되어 있어서 배열의 각 요소에 대해 함수를 실행하고 누적된 값을 출력할 때 용이하다.
    // reduce에서 initialValue 값을 0으로 두었기 때문에 acc의 초기값은 0이되고, 
    // 배열의 첫 번째 요소부터 acc에 자신의 값인 cur를 더해간다. 
    // (0이 아닌 10을 두면, acc의 초기값이 10이 되므로, 10+5+6+7+8+9의 값인 45가 나온다.)
